// Generated by https://quicktype.io

class Trending {
  int page;
  int totalResults;
  int totalPages;
  List<Result2> results;

  Trending({
    this.page,
    this.totalResults,
    this.totalPages,
    this.results,
  });
}

class Result2 {
  double popularity;
  int voteCount;
  bool video;
  String posterPath;
  int id;
  bool adult;
  String backdropPath;
  String originalTitle;
  String title;
  double voteAverage;
  String overview;
  String releaseDate;

  factory Result2.fromJSON(Map<String, dynamic> map) {
    return Result2(
        popularity: map['popularity'],
        voteCount: map['vote_count'],
        video: map['video'],
        posterPath: map['poster_path'],
        id: map['id'],
        backdropPath: map['backdrop_path'],
        title: map['title'],
        voteAverage: map['vote_average'] is int
            ? (map['vote_average'] as int).toDouble()
            : map['vote_average'],
        overview: map['overview'],
        releaseDate: map['release_date']);
  }

  Result2({
    this.popularity,
    this.voteCount,
    this.video,
    this.posterPath,
    this.id,
    this.adult,
    this.backdropPath,
    this.originalTitle,
    this.title,
    this.voteAverage,
    this.overview,
    this.releaseDate,
  });
  //(id INTEGER PRIMARY KEY, posterPath text, backdropPath text, title text, adult integer, voteAverage numeric, overview text, releaseDate text, favorite integer)");
  Map<String, dynamic> toFullJSON() {
    return {
      "posterPath": posterPath,
      "id": id,
      "backdropPath": backdropPath,
      "title": title,
      "voteAverage": voteAverage,
      "releaseDate": releaseDate,
      "adult": 0,
      "overview": overview,
      "favorite": 1
    };
  }
}

enum OriginalLanguage { EN, JA, FR, KO }
